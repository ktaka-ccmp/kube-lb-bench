apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ipvs-ingress
spec:
  backend:
    serviceName: tea-svc
    servicePort: 81
---
apiVersion: v1
kind: Service
metadata:
  name: tea-svc
  labels:
    app: tea
spec:
  ports:
  - port: 81
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: tea
  clusterIP: 10.254.0.10
---
apiVersion: extensions/v1beta1
kind: Deployment
#apiVersion: v1
#kind: ReplicationController
metadata:
  name: tea-rc
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: tea
    spec:
      nodeSelector:
        web: "yes"
      containers:
      - name: tea
#        image: nginx
        image: 192.168.0.104:5000/test/nginx
        ports:
        - containerPort: 80
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ipvs-controller
  namespace: default
  labels:
    app: ipvs-controller
spec:
  selector:
    matchLabels:
      app: ipvs-controller
  template:
    metadata:
      labels:
        app: ipvs-controller
    spec:
      nodeSelector:
        lvs: "yes"
      containers:
      - name: server
        image: 192.168.0.104:5000/ktaka/ipvs-controller:0.1
        imagePullPolicy: Always
        ports:
        - containerPort: 10254
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        args:
        - /server.sh
        - --default-backend-service=$(POD_NAMESPACE)/tea-svc
#        - --default-backend-service=$(POD_NAMESPACE)/default-backend
        securityContext:
          privileged: true
          capabilities:
            add:
#              - ALL
              - SYS_MODULE 
              - NET_ADMIN
        volumeMounts:
        - mountPath: /lib/modules
          name: lib-modules
      volumes:
      - name: lib-modules
        hostPath:
          path: /lib/modules

